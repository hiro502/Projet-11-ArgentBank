openapi: 3.0.1
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.1.0'
  termsOfService: 'http://swagger.io/terms/'
servers:
  - url: http://localhost:3001/api/v1
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        '200':
          description: Login Successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Signup Successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - BearerAuth: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      responses:
        '200':
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - BearerAuth: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfile'
      responses:
        '200':
          description: User profile updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /transactions:
    get:
      tags:
        - Transaction Module
      summary: Get user transactions
      description: Retrieves transactions for the authenticated user
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  transactions:
                    type: array
                    items:
                      type: object
                      properties:
                        transaction_id:
                          type: string
                        account_type:
                          type: string
                          description: Account type associated with the transaction (checking, saving, credit card)  
                        date:
                          type: string
                          description: Date of the transaction
                        time:
                          type: string
                          format: date-time
                          description: Timestamp of the transaction
                        description:
                          type: string
                          description: Description of the transaction
                        amount:
                          type: number
                          description: Amount of the transaction
                        balance:
                          type: number
                          description: Account balance after the transaction
                        transcription_type:
                          type: string
                          description: Type of transaction
                        category:
                          type: string
                          description: Category of the transaction
                        note:
                          type: string
                          description: Additional note about the transaction
        '401':
          description: Unauthorized - Invalid token
        '500':
          description: Internal server error
  /transactions/{transaction_id}/category:
    patch:
      security:
        - BearerAuth: []
      tags:
        - Transaction Module
      summary: Update Transaction Category
      description: API for updating the category of a transaction
      parameters:
        - in: path
          name: transaction_id
          required: true
          schema:
            type: string
            description: ID of the transaction to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionUpdateCategory'
      responses:
        '200':
          description: Transaction category updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Invalid Fields
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error

  /transactions/{transaction_id}/note:
    patch:
      security:
        - BearerAuth: []
      tags:
        - Transaction Module
      summary: Update Transaction Note
      description: API for updating the note of a transaction
      parameters:
        - in: path
          name: transaction_id
          required: true
          schema:
            type: string
            description: ID of the transaction to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionUpdateNote'
      responses:
        '200':
          description: Transaction note updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Invalid Fields
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
 
components:
  schemas:
    User:
      type: object
      properties:
        email:
          type: string
          description: user email
        password:
          type: string
          description: user password
        firstName:
          type: string
          description: user first name
        lastName:
          type: string
          description: user last name
        userName:
          type: string
          description: user public name
    Login:
      type: object
      properties:
        email:
          type: string
          description: user email
        password:
          type: string
          description: user password
    ApiResponse:
      type: object
      properties:
        status:
          type: integer
        message:
          type: string
        body:
          type: object
          properties:
            id:
              type: string
            email:
              type: string
    LoginResponse:
      type: object
      properties:
        token:
          type: string
    UserProfile:
      type: object
      properties:
        userName:
          type: string
    TransactionUpdateCategory:
      type: object
      properties:
        category:
          type: string
          description: Updated category of the transaction
      required:
        - category
    TransactionUpdateNote:
      type: object
      properties:
        note:
          type: string
          description: Updated note about the transaction
      required:
        - note    
   
  securitySchemes:
    BearerAuth:
      type: apiKey
      in: header
      name: Authorization